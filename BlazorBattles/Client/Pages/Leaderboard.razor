@page "/leaderboard";
@using System.Security.Claims
@inject ILeaderboardService _leadrboardService;
@inject AuthenticationStateProvider _authStateProvider;

<h3>Leaderboard</h3>

@if (_leadrboardService.Leaderboard == null)
{
    <span>Loading leaderboard...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    #
                </th>
                <th>User</th>
                <th>Victories</th>
                <th>Defeats</th>
                <th>Battles</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in _leadrboardService.Leaderboard)
            {
                <tr style="@GetMyStyle(entry.UserId)">
                    <td>@entry.Rank</td>
                    <td>@entry.Username</td>
                    <td>@entry.Victories</td>
                    <td>@entry.Defeats</td>
                    <td>@entry.Battles</td>
                    @if (entry.UserId != myUserId)
                    {
                        <td><button class="btn btn-primary">Fight</button></td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    int myUserId;
    protected override async Task OnInitializedAsync()
    {
        await _leadrboardService.GetLeaderboard();

        var authState = await _authStateProvider.GetAuthenticationStateAsync();
        myUserId = int.Parse(authState.User.FindFirst(ClaimTypes.NameIdentifier).Value);

        await base.OnInitializedAsync();
    }

    public string GetMyStyle(int userId)
    {
        if (userId == myUserId)
            return "color: green; font-weight: 600;";

        return string.Empty;
    }
}
