@page "/register"
@inject IUnitService _unitService
@inject IJSRuntime _jsRuntime
@inject NavigationManager _navigationManager
@inject IToastService _toastService
@inject IAuthService _authService

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label for="email" class="required">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Email)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Username)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="password" class="required">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.Password)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.ConfirmPassword)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="bio">Bio</label>
        <InputTextArea id="bio" @bind-Value="user.Bio" class="form-control"></InputTextArea>
    </div>
    <div class="form-group">
        <label for="startUnit">Start Unit</label>
        <InputSelect id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
            @foreach (var unit in _unitService.Units)
            {
                <option value=@unit.Id>@unit.Title</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="bananas">Bananas</label>
        <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control"></InputNumber>
        <ValidationMessage For="@(() => user.Bananas)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="date">Date</label>
        <InputDate id="date" @bind-Value="user.BirthDate" class="form-control"></InputDate>
    </div>
    <div class="form-group">
        <label for="confirm" class="form-check-label">Confirm</label>
        <InputCheckbox id="confirm" @bind-Value="user.IsConfirmed" class="form-check-input" type="password"></InputCheckbox>
        <ValidationMessage For="@(() => user.IsConfirmed)"></ValidationMessage>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    UserRegister user = new UserRegister();

    protected override async Task OnInitializedAsync()
    {
        await _unitService.LoadUnitsAsync();
        await base.OnInitializedAsync();
    }

    async void HandleRegistration()
    {
        var result = await _authService.Register(user);
        if (result.Success)
        {
            _toastService.ShowSuccess(result.Message);
            _navigationManager.NavigateTo("/");
        }
        else
        {
            _toastService.ShowError(result.Message);
        }
    }
}
